<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://172.17.73.80:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://172.17.73.80:4000/" rel="alternate" type="text/html" /><updated>2023-04-17T19:43:59+08:00</updated><id>http://172.17.73.80:4000/feed.xml</id><title type="html">Gavin Blog</title><subtitle>关于软件测试, 与你一起发现更大的世界</subtitle><entry><title type="html">使用 tmpwatch/tmpreaper 删除旧文件</title><link href="http://172.17.73.80:4000/2023/04/17/Delete_Linux_tmpwatch_tmpreaper/" rel="alternate" type="text/html" title="使用 tmpwatch/tmpreaper 删除旧文件" /><published>2023-04-17T00:00:00+08:00</published><updated>2023-04-17T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/04/17/Delete_Linux_tmpwatch_tmpreaper</id><content type="html" xml:base="http://172.17.73.80:4000/2023/04/17/Delete_Linux_tmpwatch_tmpreaper/">&lt;h1 id=&quot;概述&quot;&gt;概述&lt;/h1&gt;

&lt;p&gt;inux系统中我们常常会把一些临时文件或者没有什么用处的文件放置在/tmp下，还有一些进程也会将临时数据放到/var或者/tmp。这些文件如长时间不去处理日积月累可能造成磁盘空间爆满，也浪费磁盘资源。tmpwatch是一款非常实用的空间清理工具，可以帮助我们自动清理/tmp和/var空间的部分目录。&lt;/p&gt;

&lt;p&gt;tmpwatch 能够循环地删除指定目录下指定时间内没有被访问的文件，这一命令常常用于清理临时文件目录，比如 /tmp 或者 /var/tmp 这类目录。它只清除指定目录下的空目录、普通文件和符号链接文件，也不会影响其他目录，而且会避开那些属于root用户的系统相关关键文件的。&lt;/p&gt;

&lt;p&gt;默认设置下，tmpwatch 命令依据文件的 atime （access time）而非mtime （modify time）来删除文件。如果你想改变它的删除依据，可以在使用这个命令时加上你想修改的参数。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;注意：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;千万不要在根目录底下运行 tmpwatch 或者 tmpreaper 命令，因为系统可没有任何机制阻止你在根目录下运行此命令。&lt;/p&gt;

&lt;h1 id=&quot;tmpwatch使用说明&quot;&gt;tmpwatch使用说明#&lt;/h1&gt;

&lt;p&gt;tmpwatch参数说明&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt; -u, --atime 基于访问时间来删除文件，默认的。
 -m, --mtime 基于修改时间来删除文件。
 -c, --ctime 基于创建时间来删除文件，对于目录，基于mtime。
 -M, --dirmtime 删除目录基于目录的修改时间而不是访问时间。
 -a, --all 删除所有的文件类型，不只是普通文件，符号链接和目录。
 -d, --nodirs 不尝试删除目录，即使是空目录。
 -d, --nosymlinks 不尝试删除符号链接。
 -f, --force 强制删除。
 -q, --quiet 只报告错误信息。
 -s, --fuser 如果文件已经是打开状态在删除前，尝试使用“定影”命令。默认不启用。
 -t, --test 仅作测试，并不真的删除文件或目录。
 -U, --exclude-user=user 不删除属于谁的文件。
 -v, --verbose 打印详细信息。
 -x, --exclude=path 排除路径，如果路径是一个目录，它包含的所有文件被排除了。如果路径不存在，它必须是一个绝对路径不包含符号链接。
 -X, --exclude-pattern=pattern 排除某规则下的路径。
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;tmpwatch-命令的关键选项和参数&quot;&gt;tmpwatch 命令的关键选项和参数&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;atime (File Last Access Time)：文件最后一次被访问的时间；&lt;/li&gt;
  &lt;li&gt;mtime (File Last Modify Time)：文件内容最后一次被修改的时间；&lt;/li&gt;
  &lt;li&gt;ctime (File Last Change Time)：文件元数据最后一次被修改的时间，即文件相关属性被修改的时间，多数情况下 mtime 和 ctime 值相同，但是诸如文件所有者、权限、所属组这类不涉及内容的属性被修改时则只会影响 ctime；&lt;/li&gt;
  &lt;li&gt;dirmtime (Directory Last modification time)：目录最后一次被修改的时间。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些时间参数用来设置删除文件的条件阈值：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;d：单位为天；&lt;/li&gt;
  &lt;li&gt;h：单位为小时；&lt;/li&gt;
  &lt;li&gt;m：单位为分钟；&lt;/li&gt;
  &lt;li&gt;s：单位为秒。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;用-tmpwatch-命令删除一段时间内没有被访问的文件&quot;&gt;用 tmpwatch 命令删除一段时间内没有被访问的文件&lt;/h1&gt;

&lt;p&gt;如前所述，tmpwatch 命令的默认选项是 atime，而默认的单位参数则是h，所以如果你确实要按以小时为单位计算的访问时间来删除文件，那么你不用加任何特殊的选项或则参数后缀，可以直接是用这个命令。如下例所示，即为删除 /tmp 目录下过去5小时内没有被访问的文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmpwatch 5 /tmp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;下面这个示例是删除 /home/btadmin/Downloads 目录下过去十小时内没有修改过内容的文件，注意，如果要按 mtime 来删除文件，需要在命令中加上-m 的选项：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmpwatch -m 10 /home/btadmin/Downloads&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;删除以其他单位计算的某段时间内没有被访问的文件&quot;&gt;删除以其他单位计算的某段时间内没有被访问的文件&lt;/h2&gt;

&lt;p&gt;如果你要以天为单位，则需要加上 d 的后缀，如下为删除30天内没有被访问的文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmpwatch 30d /home/btadmin/Downloads&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;删除一段时间内未被使用的所有文件&quot;&gt;删除一段时间内未被使用的所有文件&lt;/h2&gt;

&lt;p&gt;如果你想不仅仅删除普通文件、符号链接文件、空目录文件，而是想删除指定目录下某段时间内没有被访问的所有文件，则需要加上选项 -a，如下为删除指定目录下12小时未被修改内容的所有文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmpwatch -am 12 /tmp&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;将某些目录排除在删除操作外&quot;&gt;将某些目录排除在删除操作外&lt;/h2&gt;

&lt;p&gt;如下命令可以让那些十小时内没有被修改过内容的目录不被删除：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmpwatch -am 10 --nodirs /home/btadmin/Downloads&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;将特定路径排除在删除操作外&quot;&gt;将特定路径排除在删除操作外&lt;/h2&gt;

&lt;p&gt;下面的命令删除 /home/btadmin/Downloads 目录下所有十小时内没有修改内容的文件，但是 /home/btadmin/Downloads/Builds 路径下却不受影响，即该路径下十小时内没修改的文件也不会被删除：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmpwatch -am 10 --exclude=/home/btadmin/Downloads/Builds /home/btadmin/Downloads&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;将特定格式的文件排除在删除操作外&quot;&gt;将特定格式的文件排除在删除操作外&lt;/h2&gt;

&lt;p&gt;下面所示的命令为删除指定文件下的所有10小时内未被改动的文件，除了pdf 格式的文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmpwatch -am 10 --exclude-pattern='*.pdf' /home/btadmin/Downloads&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;预演-tmpwatch-的效果&quot;&gt;预演 tmpwatch 的效果&lt;/h2&gt;

&lt;p&gt;下面这条命令即是对 tmpwatch 的功能效果进行预演：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tmpwatch -t 5h /home/btadmin/Downloads&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;用-tmpwatch-设置一个定时任务周期性地执行删除操作&quot;&gt;用 tmpwatch 设置一个定时任务周期性地执行删除操作&lt;/h2&gt;

&lt;p&gt;要完成这个任务，会在 /etc/cron.daily/tmpreaper 目录下留下一个 cronjob 文件，这个文件是按照 /etc/timereaper.conf 的设定工作的，你可以按自己的需求设置它。&lt;/p&gt;

&lt;p&gt;如下所示的设置，能在每天上午10点时删除指定目录下，十五天没被访问的文件：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;crontab -e0 10 * * * /usr/sbin/tmpwatch 15d /home/btadmin/Downloads&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;默认定时任务配置&quot;&gt;默认定时任务配置&lt;/h3&gt;
&lt;p&gt;安装后会在/etc/cron.daily/目录下生成一个tmpwatch文件，crontab每天会调用执行一次。内容如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[roota@redhat6 ~]# cat /etc/cron.daily/tmpwatch 
#! /bin/sh
flags=-umc
/usr/sbin/tmpwatch &quot;$flags&quot; -x /tmp/.X11-unix -x /tmp/.XIM-unix \
        -x /tmp/.font-unix -x /tmp/.ICE-unix -x /tmp/.Test-unix \
        -X '/tmp/hsperfdata_*' -X '/tmp/.hdb*lock' -X '/tmp/.sapstartsrv*.log' \
        -X '/tmp/pymp-*' 10d /tmp
/usr/sbin/tmpwatch &quot;$flags&quot; 30d /var/tmp
for d in /var/{cache/man,catman}/{cat?,X11R6/cat?,local/cat?}; do
    if [ -d &quot;$d&quot; ]; then
        /usr/sbin/tmpwatch &quot;$flags&quot; -f 30d &quot;$d&quot;
    fi
done
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从配置可以看出tmpwatch排查了/tmp 和 /var 下的一些目录，/tmp保留10d内访问修改过的文件，/var保留30d，其他都删除。&lt;/p&gt;

&lt;h1 id=&quot;总结&quot;&gt;总结&lt;/h1&gt;

&lt;p&gt;tmpwatch是空间清理的利器，但在测试和使用时也需要注意安全。重要数据切记不要放到/tmp下，尽管其他非特权用户没有权限删除但tmpwatch可以。&lt;/p&gt;</content><author><name>Gavin</name></author><category term="Linux" /><summary type="html">概述</summary></entry><entry><title type="html">一行命令获取python当前默认的编码格式</title><link href="http://172.17.73.80:4000/2023/04/17/Get_python_encoding/" rel="alternate" type="text/html" title="一行命令获取python当前默认的编码格式" /><published>2023-04-17T00:00:00+08:00</published><updated>2023-04-17T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/04/17/Get_python_encoding</id><content type="html" xml:base="http://172.17.73.80:4000/2023/04/17/Get_python_encoding/">&lt;h1 id=&quot;实践&quot;&gt;实践&lt;/h1&gt;

&lt;p&gt;Python2.x&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;python -c 'import locale; print(locale.getpreferredencoding())'
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Python 3.x&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;python3 -c 'import locale; print(locale.getpreferredencoding())'
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gavin</name></author><category term="JBOD" /><summary type="html">实践</summary></entry><entry><title type="html">查看JBOD Write Cache Policy</title><link href="http://172.17.73.80:4000/2023/04/13/JBOD_write_cache/" rel="alternate" type="text/html" title="查看JBOD Write Cache Policy" /><published>2023-04-13T00:00:00+08:00</published><updated>2023-04-13T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/04/13/JBOD_write_cache</id><content type="html" xml:base="http://172.17.73.80:4000/2023/04/13/JBOD_write_cache/">&lt;h1 id=&quot;概述&quot;&gt;概述&lt;/h1&gt;

&lt;p&gt;在在验证JBOD启用Write Cache时，服务器强制掉电是否出现文件系统错误，需要先检查JBOD是否启用了Write Cache。
故本文介绍查看JBOD Write Policy，至于服务器掉电是否引发文件系统错误的验证，参考我同事的一篇文章：
https://bean-li.github.io/check-hardware-data-loss&lt;/p&gt;

&lt;h1 id=&quot;实践&quot;&gt;实践&lt;/h1&gt;

&lt;h2 id=&quot;显示jbod-write-cache信息&quot;&gt;显示JBOD Write Cache信息&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node216:~# hdparm -W /dev/sdj

/dev/sdj:
 write-caching =  1 (on)
root@node216:~# hdparm -W 0 /dev/sdj

/dev/sdj:
 setting drive write-caching to 0 (off)
 write-caching =  0 (off)
root@node216:~# hdparm -W 1 /dev/sdj

/dev/sdj:
 setting drive write-caching to 1 (on)
 write-caching =  1 (on)
root@node216:~#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;显示硬盘的相关设置&quot;&gt;显示硬盘的相关设置&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;hdparm /dev/sda
/dev/sda:
IO_support = 0 (default 16-bit)
readonly = 0 (off)
readahead = 256 (on)
geometry = 19457［柱面数］/255［磁头数］/63［扇区数］, sectors = 312581808［总扇区数］, start = 0［起始扇区数］
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;显示硬盘的柱面磁头扇区数&quot;&gt;显示硬盘的柱面、磁头、扇区数&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;hdparm -g /dev/sda
/dev/sda:
geometry = 19457［柱面数］/255［磁头数］/63［扇区数］, sectors = 312581808［总扇区数］, start = 0［起始扇区数］
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;测试硬盘的读取速度&quot;&gt;测试硬盘的读取速度&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;hdparm -T /dev/sda
/dev/sda:
 Timing cached reads:   4684 MB in  2.00 seconds = 2342.92 MB/sec
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;测试硬盘缓存的读取速度&quot;&gt;测试硬盘缓存的读取速度&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;hdparm -T /dev/xvda
/dev/xvda:
Timing cached reads: 11154 MB in 1.98 seconds = 5633.44 MB/sec
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;检测硬盘的电源管理模式&quot;&gt;检测硬盘的电源管理模式&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;hdparm -C /dev/sda
/dev/sda:
drive state is: standby [省电模式]
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;查询并设置硬盘多重扇区存取的扇区数以增进硬盘的存取效率&quot;&gt;查询并设置硬盘多重扇区存取的扇区数，以增进硬盘的存取效率&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;hdparm -m /dev/sda
hdparm -m    #参数值为整数值如8 /dev/sda
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;附硬盘坏道修复方法&quot;&gt;附：硬盘坏道修复方法&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;检查：smartctl -l selftest /dev/sda
卸载：umount /dev/sda*
修复：badblocks /dev/sda
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gavin</name></author><category term="JBOD" /><summary type="html">概述</summary></entry><entry><title type="html">LV 扩容</title><link href="http://172.17.73.80:4000/2023/03/16/Ubuntu22_LV_Capacity_Expansion/" rel="alternate" type="text/html" title="LV 扩容" /><published>2023-03-16T00:00:00+08:00</published><updated>2023-03-16T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/03/16/Ubuntu22_LV_Capacity_Expansion</id><content type="html" xml:base="http://172.17.73.80:4000/2023/03/16/Ubuntu22_LV_Capacity_Expansion/">&lt;h1 id=&quot;概述&quot;&gt;概述&lt;/h1&gt;

&lt;p&gt;前段时间基于Ubuntu22.04 搭建了Jenkins, VM 当时给的 OS disk size是100G, 今天查看环境，无意间发现/空间使用率接近50%。&lt;/p&gt;

&lt;p&gt;本文简易概述LV扩容。&lt;/p&gt;

&lt;h1 id=&quot;现象&quot;&gt;现象&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@jenkins:~# df -Ph
Filesystem                         Size  Used Avail Use% Mounted on
tmpfs                              796M  1.2M  794M   1% /run
/dev/mapper/ubuntu--vg-ubuntu--lv   48G   22G   25G  47% /
tmpfs                              3.9G     0  3.9G   0% /dev/shm
tmpfs                              5.0M     0  5.0M   0% /run/lock
/dev/sda2                          2.0G  126M  1.7G   7% /boot
tmpfs                              796M  4.0K  796M   1% /run/user/0
root@jenkins:~# lsblk
NAME                      MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
fd0                         2:0    1     4K  0 disk 
loop0                       7:0    0  63.3M  1 loop /snap/core20/1822
loop1                       7:1    0  63.3M  1 loop /snap/core20/1828
loop2                       7:2    0  79.9M  1 loop /snap/lxd/22923
loop3                       7:3    0 111.9M  1 loop /snap/lxd/24322
loop4                       7:4    0  49.8M  1 loop /snap/snapd/17950
loop5                       7:5    0  49.8M  1 loop /snap/snapd/18357
sda                         8:0    0   100G  0 disk 
├─sda1                      8:1    0     1M  0 part 
├─sda2                      8:2    0     2G  0 part /boot
└─sda3                      8:3    0    98G  0 part 
  └─ubuntu--vg-ubuntu--lv 253:0    0    49G  0 lvm  /
sr0                        11:0    1  1024M  0 rom  
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可用空间98G，实际只分配了49G，余下空间想利用起来。&lt;/p&gt;

&lt;h1 id=&quot;实践&quot;&gt;实践&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;查看可用空间&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@jenkins:~# lvdisplay
  --- Logical volume ---
  LV Path                /dev/ubuntu-vg/ubuntu-lv
  LV Name                ubuntu-lv
  VG Name                ubuntu-vg
  LV UUID                c5tkxV-ZwMC-rVs5-ucVU-gYeQ-B36P-Fgw3JT
  LV Write Access        read/write
  LV Creation host, time ubuntu-server, 2023-01-29 15:41:37 +0800
  LV Status              available
  # open                 1
  LV Size                &amp;lt;49.00 GiB
  Current LE             12543
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:0
   
root@jenkins:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@jenkins:~# fdisk -l /dev/sda
Disk /dev/sda: 100 GiB, 107374182400 bytes, 209715200 sectors
Disk model: Virtual disk    
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: EEA2172F-74FA-41F6-AB3C-D4E8F8F5A991

Device       Start       End   Sectors Size Type
/dev/sda1     2048      4095      2048   1M BIOS boot
/dev/sda2     4096   4198399   4194304   2G Linux filesystem
/dev/sda3  4198400 209713151 205514752  98G Linux filesystem
root@jenkins:~#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从上图可以看出磁盘大小(98)大于系统逻辑分区大小(49G)，知道了现在磁盘完全可以提升利用率，就可以直接进行扩容，不需要额外增加硬盘&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;执行命令扩容&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@jenkins:~# lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv
  Size of logical volume ubuntu-vg/ubuntu-lv changed from &amp;lt;49.00 GiB (12543 extents) to &amp;lt;98.00 GiB (25087 extents).
  Logical volume ubuntu-vg/ubuntu-lv successfully resized.
root@jenkins:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意后面的逻辑分区名字使用lvdisplay命令获取到的&lt;/p&gt;

&lt;p&gt;3、执行 命令resize2fs /dev/ubuntu-vg/ubuntu-lv 刷新逻辑卷&lt;/p&gt;

&lt;p&gt;4、执行命令df -h查看效果&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@jenkins:~# df -Ph
Filesystem                         Size  Used Avail Use% Mounted on
tmpfs                              796M  1.2M  794M   1% /run
/dev/mapper/ubuntu--vg-ubuntu--lv   97G   22G   71G  24% /
tmpfs                              3.9G     0  3.9G   0% /dev/shm
tmpfs                              5.0M     0  5.0M   0% /run/lock
/dev/sda2                          2.0G  126M  1.7G   7% /boot
tmpfs                              796M  4.0K  796M   1% /run/user/0
root@jenkins:~# 

root@jenkins:~# lsblk
NAME                      MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
fd0                         2:0    1     4K  0 disk 
loop0                       7:0    0  63.3M  1 loop /snap/core20/1822
loop1                       7:1    0  63.3M  1 loop /snap/core20/1828
loop2                       7:2    0  79.9M  1 loop /snap/lxd/22923
loop3                       7:3    0 111.9M  1 loop /snap/lxd/24322
loop4                       7:4    0  49.8M  1 loop /snap/snapd/17950
loop5                       7:5    0  49.8M  1 loop /snap/snapd/18357
sda                         8:0    0   100G  0 disk 
├─sda1                      8:1    0     1M  0 part 
├─sda2                      8:2    0     2G  0 part /boot
└─sda3                      8:3    0    98G  0 part 
  └─ubuntu--vg-ubuntu--lv 253:0    0    98G  0 lvm  /
sr0                        11:0    1  1024M  0 rom  
root@jenkins:~# 
root@jenkins:~#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gavin</name></author><category term="Linux" /><summary type="html">概述</summary></entry><entry><title type="html">Ubuntu 22.04上部署、配置Jenkins</title><link href="http://172.17.73.80:4000/2023/03/08/Ubuntu22_deploy_Jenkins/" rel="alternate" type="text/html" title="Ubuntu 22.04上部署、配置Jenkins" /><published>2023-03-08T00:00:00+08:00</published><updated>2023-03-08T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/03/08/Ubuntu22_deploy_Jenkins</id><content type="html" xml:base="http://172.17.73.80:4000/2023/03/08/Ubuntu22_deploy_Jenkins/">&lt;h1 id=&quot;概述&quot;&gt;概述&lt;/h1&gt;

&lt;p&gt;本文基于Ubuntu 22 安装 Jenkins 2.375.3，记录下部署与调试过程   。&lt;/p&gt;

&lt;h1 id=&quot;准备工作&quot;&gt;准备工作&lt;/h1&gt;

&lt;h2 id=&quot;安装ubuntu-2204&quot;&gt;安装Ubuntu 22.04&lt;/h2&gt;

&lt;p&gt;OS信息如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt; Static hostname: jenkins
       Icon name: computer-vm
         Chassis: vm
      Machine ID: 5876152df2764a3a80c0788e54f81f62
         Boot ID: fb9b1e97473f40df811b0980474c029d
  Virtualization: vmware
Operating System: Ubuntu 22.04.1 LTS              
          Kernel: Linux 5.15.0-43-generic
    Architecture: x86-64
 Hardware Vendor: VMware, Inc.
  Hardware Model: VMware Virtual Platform
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装必要的软件包&quot;&gt;安装必要的软件包&lt;/h2&gt;

&lt;p&gt;如下，列出了必要的软件安装（没有完整的记录下来，可能不全）：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;apt-get update
apt-get install git -y
apt-get install libpcsclite1 -y
apt-get install ca-certificates-java -y
apt-get install fonts-dejavu-extra -y --fix-missing
apt-get install libllvm13 -y
apt-get install fonts-dejavu-extra -y
apt-get install openjdk-11-jre-headless -y
apt-get install openjdk-11-jre -y
apt-get install libdrm-amdgpu1 libdrm-nouveau2 libdrm-radeon1 libglapi-mesa libsensors5 libvulkan1 -y
apt-get install libgl1 -y
apt-get install libglvnd0 -y
apt-get install plocate -y
apt-get install git-lfs -y
apt-get install expect -y
apt-get install spawn -y
apt-get install sshpass -y  
apt-get install allure-commandline -y
apt-get install python3-pip -y
apt install jenkins -y
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为了支持Email对pylint 绘图功能，需要安装matlpotib, 相关安装包信息参考如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;ca-certificates-java_20190909ubuntu1.1_all.deb
contourpy-1.0.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
cycler-0.11.0-py3-none-any.whl
default-jre-headless_1.11-72build2_amd64.deb
fonts-dejavu-extra_2.37-2build1_all.deb
fonttools-4.38.1.dev0-py3-none-any.whl
g++-11_11.3.0-1ubuntu1~22.04_amd64.deb
java-common_0.72build2_all.deb
libgl1-mesa-dri_22.0.5-0ubuntu0.3_amd64.deb
libllvm13_13.0.1-2ubuntu2_amd64.deb
libpython3.10-dev_3.10.6-1~22.04.2_amd64.deb
matplotlib-3.7.1.tar.gz
numpy-1.24.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
openjdk-11-jre-headless_11.0.17+8-1ubuntu2~22.04_amd64.deb
python3.10-minimal_3.10.6-1~22.04.2_amd64.deb
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;配置jenkins&quot;&gt;配置Jenkins&lt;/h1&gt;

&lt;p&gt;Jenkins 安装好后，访问8080端口，按提示一步一步往下走，此处不做额外赘述。&lt;/p&gt;

&lt;h2 id=&quot;jenkins-plugin-的安装&quot;&gt;Jenkins Plugin 的安装&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;需要安装如下插件与工具：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;allure
Cobertura Coverage
Violations Plugin # Pylint
AnsiColor         # 颜色
Next Build Number Plugin
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一些基础的Plug，像git, pipline 之类的安装，此处不做赘述。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;install allure commandline：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;安装包手动下载下来：&lt;code class=&quot;highlighter-rouge&quot;&gt;https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.21.0/allure-commandline-2.21.0.tgz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在Jenkins上使用root 用户，安装到/usr/lib/下，参考如下：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/lib/allure-2.21.0/lib/allure-commandline-2.21.0.jar&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;修改-expect-spawn-ssh时prompt无法通过问题&quot;&gt;修改 expect spawn ssh时prompt无法通过问题&lt;/h2&gt;

&lt;p&gt;修改vim /etc/ssh/ssh_config&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;StrictHostKeyChecking ask   --&amp;gt;改为 StrictHostKeyChecking no&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;并重启ssh服务，以此来避免expect 中执行spawn交互失败。&lt;/p&gt;

&lt;h2 id=&quot;jenkins-邮箱配置&quot;&gt;Jenkins 邮箱配置&lt;/h2&gt;

&lt;p&gt;Jenkins 当前登录UI用户的邮箱，需要和全局配置里设置的邮箱用户名保持一致，否则会报错，参考如下：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/in-post/jenkins_email_config.png&quot; width=&quot;1200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;参考如下：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://naiveskill.com/jenkins-pipeline-email-notification/&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;jenkins-匿名用户权限配置&quot;&gt;Jenkins 匿名用户权限配置&lt;/h2&gt;

&lt;p&gt;为了让Email端能够正常展示出allure trend，pylint error，以及CODE COVERAGE信息，需要对匿名用户开放一定的权限：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/in-post/Jenkins_permission.png&quot; width=&quot;1200&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;email-模板&quot;&gt;Email 模板&lt;/h2&gt;

&lt;p&gt;为了让CI结果更好的展示，基于官方模板(&lt;code class=&quot;highlighter-rouge&quot;&gt;https://github.com/jenkinsci/email-ext-plugin/blob/master/src/main/resources/hudson/plugins/emailext/templates/groovy-html.template&lt;/code&gt;)，
增加了allure, pylint 和 CODE COVERAGE信息，自定义了一个EMail模板，存放在Jenkins install path()下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;jenkins@jenkins:/var/lib/jenkins$ cd email-templates/
jenkins@jenkins:/var/lib/jenkins/email-templates$ ls -l
total 120
-rw-rw-r-- 1 jenkins jenkins  6292 Feb 17 15:49 allure-report.groovy
-rw-r--r-- 1 jenkins jenkins 69669 Mar  7 18:57 v1.0_allure-pipeline-report.groovy
-rw-r--r-- 1 jenkins jenkins  7759 Mar  7 22:24 v1.1_allure-pipeline-report.groovy
jenkins@jenkins:/var/lib/jenkins/email-templates$ 
jenkins@jenkins:/var/lib/jenkins/email-templates$ 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中，&lt;strong&gt;v1.1_allure-pipeline-report.groovy&lt;/strong&gt; 为当前使用模板，里面有定义一个需要被替换的内容：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;img src=&quot;EMAIL_BASE64_IMG_REPLACE&quot; width=&quot;500px&quot; height=&quot;200px&quot;/&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此处内容，需要借助 &lt;strong&gt;edit_email_template.py&lt;/strong&gt;  这个代码来生成base64 image并替换，最终被pipline 处的EMail 使用。&lt;/p&gt;

&lt;p&gt;需要借助 &lt;strong&gt;edit_email_template.py&lt;/strong&gt;  的原因在于，新版本的Jenkins，对于pylint结果产生的图形，是基于canvas，并不是一个静态图片，无法通过HTML中的img src来直接指定。&lt;/p&gt;

&lt;h1 id=&quot;实践&quot;&gt;实践&lt;/h1&gt;

&lt;p&gt;如下，以Lab 实际配置截图：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/in-post/jenkins_job_config.png&quot; width=&quot;1200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;总共设置了String类型的如下参数：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GIT_WEB  –&amp;gt; http://1.22.21.9/pytest_framework&lt;/li&gt;
  &lt;li&gt;GIT_URL  –&amp;gt; git@1.22.21.9:pytest_framework.git&lt;/li&gt;
  &lt;li&gt;GIT_BRANCH –&amp;gt; 8.3&lt;/li&gt;
  &lt;li&gt;REPORT_DIR –&amp;gt; /root/${JOB_NAME}/report                                        # Jenkins install path&lt;/li&gt;
  &lt;li&gt;WORK_SPACE –&amp;gt; ${JENKINS_INSTALL_PATH}/workspace/pytest_8.3_pipeline           # Jenkins work space&lt;/li&gt;
  &lt;li&gt;JOB_SPACE –&amp;gt; ${JENKINS_INSTALL_PATH}/jobs/pytest_8.3_pipeline                 # pytest job space&lt;/li&gt;
  &lt;li&gt;BAT_INSTALL –&amp;gt;  /root/batch_install/batch_install.py /root/batch_install/config/pytest/pytest_8.3_pipeline_195_cone # Bat install OS by Cobbler&lt;/li&gt;
  &lt;li&gt;IPS –&amp;gt; 12.71.57.11,12.71.57.12,12.71.57.13,12.71.57.14,12.71.57.15,12.71.57.16,12.71.57.17,12.71.57.18              # Cluster hosts IP,split by,&lt;/li&gt;
  &lt;li&gt;CODE_DIR –&amp;gt; /root/${JOB_NAME}/src                                             # pytest code dir which will be runned&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Email Template&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在官方模板 &lt;code class=&quot;highlighter-rouge&quot;&gt;https://github.com/jenkinsci/email-ext-plugin/blob/master/src/main/resources/hudson/plugins/emailext/templates/groovy-html.template&lt;/code&gt; 的基础上，增加了三张图。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pipline Script&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groovy&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ip_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ips_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cluster1_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cluster2_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cluster3_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cluster4_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cluster5_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cluster_ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${cluster1_ip} ${cluster2_ip} ${cluster3_ip} ${cluster4_ip} ${cluster5_ip}&quot;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* !!! WARNING !!!
  Introduce the -n parameter, because 03Hosts and 05RRS will involve the fourth node,
  so 03Hosts and 05RRS need to be executed in a cluster 
*/&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pipeline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;timestamps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;stages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/* IP check */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;IP Cheeck&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
                                if [[ ${ips_size} != 16 ]]; then
                                    echo &quot;IPS is not enough, but give (${ips_size}) nodes to run case&quot;
                                    exit 1
                                fi
                            &quot;&quot;&quot;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                       &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cm&quot;&gt;/* Install VM by PVE */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Initialize&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
                            #!/bin/bash -xe
                            echo &quot;Call batch_install_vs.py to install ISO.&quot;
                            sshpass -p 1 ssh -p 22 12.71.57.236 -l root \${BAT_INSTALL}
                            &quot;&quot;&quot;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cm&quot;&gt;/* Get code */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Code Checkout&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;retry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;activity:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;time:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;unit:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'MINUTES'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;checkout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'GitSCM'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;branches:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GIT_BRANCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]],&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;browser:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'GitLab'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;repoUrl:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GIT_WEB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;version:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'12.8'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;doGenerateSubmoduleConfigurations:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;extensions:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CleanBeforeCheckout'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;deleteUntrackedNestedRepositories:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'SubmoduleOption'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;recursiveSubmodules:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'GitLFSPull'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'PruneStaleBranch'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
                                &lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;submoduleCfg:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[],&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;userRemoteConfigs:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;url:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GIT_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cm&quot;&gt;/* scp code to nodes */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sync Code to Cluster Nodes&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;                            
                            &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
                            #!/bin/bash -xe
                            cd \${WORK_SPACE};
                            rm -rf build.properties;
                            rm -rf report;
                            cd jenkins;
                            chmod a+x *.sh;
                            for each_ip in ${cluster_ip}
                                do
                                    echo &quot;Scp code to node : \${each_ip}&quot;
                                    ssh-keygen -f '$HOME/.ssh/known_hosts' -R \${each_ip};
                                    ./rsync_pytest.sh \${WORK_SPACE} \${each_ip} root p@ssw0rd
                                    sleep 1
                                done
                            &quot;&quot;&quot;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Parallel Stage&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Parallel Stage to Run Cases'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;failFast&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;parallel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Run test case on Cluster1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Run test case on node : ${cluster1_ip}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sshpass -p p@ssw0rd ssh -p 22 -l root ${cluster1_ip} \'cd ${CODE_DIR}; dpkg -i ../python_3rd_lib/python-configobj_4.7.2+ds-3build1_all.deb;cp config/autotest_11_12_13.config config/autotest.config;python run.py -t \&quot;testcase/Function_Test/case_03_Hosts/\&quot; -n True \'&quot;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${err}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'exit 1'&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Run test case on Cluster2'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Run test case on node : ${cluster2_ip}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sshpass -p p@ssw0rd ssh -p 22 -l root ${cluster2_ip} \'cd ${CODE_DIR}; dpkg -i ../python_3rd_lib/python-configobj_4.7.2+ds-3build1_all.deb;cp config/autotest_15_16_17.config config/autotest.config;python run.py -t \&quot;testcase/Function_Test/case_11_CSI testcase/Function_Test/case_10_S3/test_05_datasearch.py \&quot;\'&quot;&lt;/span&gt;

                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${err}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'exit 1'&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Run test case on Cluster3'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Run test case on node : ${cluster3_ip}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sshpass -p p@ssw0rd ssh -p 22 -l root ${cluster3_ip} \'cd ${CODE_DIR}; dpkg -i ../python_3rd_lib/python-configobj_4.7.2+ds-3build1_all.deb;cp config/autotest_18_19_20.config config/autotest.config;python run.py -t \&quot;testcase/Function_Test/case_04_Virtual_Storages/03_NAS \&quot;\'&quot;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${err}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'exit 1'&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Run test case on Cluster4'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Run test case on node : ${cluster4_ip}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sshpass -p p@ssw0rd ssh -p 22 -l root ${cluster4_ip} \'cd ${CODE_DIR}; dpkg -i ../python_3rd_lib/python-configobj_4.7.2+ds-3build1_all.deb;cp config/autotest_21_22_23.config config/autotest.config;rm -rf testcase/Function_Test/case_10_S3/test_05_datasearch.py;python run.py -t \&quot;testcase/Function_Test/case_10_S3/ \&quot;\'&quot;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${err}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'exit 1'&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Run test case on Cluster5'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Run test case on node : ${cluster5_ip}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sshpass -p p@ssw0rd ssh -p 22 -l root ${cluster5_ip} \'cd ${CODE_DIR}; dpkg -i ../python_3rd_lib/python-configobj_4.7.2+ds-3build1_all.deb;cp config/autotest_24_25_26.config config/autotest.config;python run.py -t \&quot;testcase/Function_Test/case_99_others \&quot;\'&quot;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;${err}&quot;&lt;/span&gt;
                                &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'exit 1'&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Merge report */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Merge Report&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
                        #!/bin/bash -xe
                        JENKINS_IP=`cat \${JENKINS_INSTALL_PATH}/jenkins.model.JenkinsLocationConfiguration.xml | grep jenkinsUrl | awk -F ':' '{{print \$2}}' | sed 's#/##g'`
                        rm -rf \${WORK_SPACE}/report/*
                        cd \${WORK_SPACE}/jenkins;
                        for each_ip in ${cluster_ip}
                            do
                                echo &quot;Scp report from : (\${each_ip}) to jenkins node&quot;
                                ./rsync_report.sh \${each_ip} btadmin btadmin \${REPORT_DIR} \${WORK_SPACE} \${JENKINS_IP};
                            done
                        ./jenkins_build_properties.sh \${WORK_SPACE}
                        &quot;&quot;&quot;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Generate Allure Report&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;allure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;
                            &lt;span class=&quot;nl&quot;&gt;includeProperties:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;nl&quot;&gt;jdk:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;nl&quot;&gt;properties:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[],&lt;/span&gt;
                            &lt;span class=&quot;nl&quot;&gt;reportBuildPolicy:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ALWAYS'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;nl&quot;&gt;results:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;path:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'report/json'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
                       &lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cm&quot;&gt;/* Publish Cobertura Coverage Report */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Publish Cobertura Coverage Report&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                       &lt;span class=&quot;n&quot;&gt;cobertura&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;autoUpdateHealth:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;autoUpdateStability:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;coberturaReportFile:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'report/coverage.xml'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;conditionalCoverageTargets:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'70, 0, 0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;failUnhealthy:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;failUnstable:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;lineCoverageTargets:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'80, 0, 0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;maxNumberOfBuilds:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;methodCoverageTargets:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'80, 0, 0'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;onlyStable:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;sourceEncoding:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ASCII'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                               &lt;span class=&quot;nl&quot;&gt;zoomCoverageChart:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
                       &lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cm&quot;&gt;/* Generate pylint Report */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Code Quality Check'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Run pylint code style check&quot;&lt;/span&gt;
        		    &lt;span class=&quot;c1&quot;&gt;// Ignore pylint comments via &quot;-d C&quot;&lt;/span&gt;
                    &lt;span class=&quot;cm&quot;&gt;/*
        		    sh '''
        		    	. .venv/bin/activate
        			    pylint -d C -f parseable ${SOURCE_ROOT} --exit-zero | tee ${PYLINT_REPORT}
        		    '''
                    */&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        	&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cat report/pylint.out'&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;recordIssues&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;healthy:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;tools:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pyLint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'PyLint'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;pattern:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'report/pylint.out'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)],&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;unhealthy:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Edit Email Template */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Edit Email Template&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
                        #!/bin/bash -xe
                        cp \${JENKINS_INSTALL_PATH}/email-templates/v1.1_allure-pipeline-report.groovy \${JENKINS_INSTALL_PATH}/email-templates/allure-pipeline-report.groovy
                        cd \${WORK_SPACE}/jenkins; 
                        python3 edit_email_template.py \${JOB_SPACE}/builds \${JENKINS_INSTALL_PATH}/email-templates/allure-pipeline-report.groovy EMAIL_BASE64_IMG_REPLACE
                        &quot;&quot;&quot;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cm&quot;&gt;/* Send Email */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Send Email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;cm&quot;&gt;/*
                        build_status = sh (
                            script: &quot;&quot;&quot;curl http://127.0.0.1:8080/job/${JOB_NAME}/lastBuild/api/json | json_pp | grep result | sed 's/   \&quot;result&quot; : \&quot;//g' | sed 's/&quot;,//g'&quot;&quot;&quot;,
                            returnStdout: true
                            ).trim()
                        echo &quot;build status  ${build_status}&quot;
                       */&lt;/span&gt;

                       &lt;span class=&quot;n&quot;&gt;product_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                            &lt;span class=&quot;nl&quot;&gt;script:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;sshpass -p btadmin ssh -p 22 ${cluster1_ip} -l btadmin ezs3-version&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                            &lt;span class=&quot;nl&quot;&gt;returnStdout:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PRODUCT_VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product_version&lt;/span&gt;

                        &lt;span class=&quot;n&quot;&gt;emailext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;
                                &lt;span class=&quot;c1&quot;&gt;// attachLog: true,&lt;/span&gt;
                                &lt;span class=&quot;c1&quot;&gt;// attachmentsPattern: 'report/cgi_response_elapsed_time.txt,report/pytest_autotest.log.gz',&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;attachmentsPattern:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'report/cgi_response_elapsed_time.txt'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'${SCRIPT, template=&quot;allure-pipeline-report.groovy&quot;}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;compressLog:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;postsendScript:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$DEFAULT_POSTSEND_SCRIPT'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;presendScript:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$DEFAULT_PRESEND_SCRIPT'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;replyTo:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$PROJECT_DEFAULT_REPLYTO'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;c1&quot;&gt;// subject: '${env.PROJECT_DEFAULT_SUBJECT}',&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;subject:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'${JOB_NAME} - ${BUILD_DISPLAY_NAME}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                                &lt;span class=&quot;nl&quot;&gt;to:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'zhangsan@163.com'&lt;/span&gt;
                       &lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果想生成3个维度的数据，示例代码如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;import base64
import io
import matplotlib.pyplot as plt
from matplotlib.ticker import MultipleLocator

def generate_chart(x, excellent, satisfactory, failing):
    fig = plt.figure(figsize=(15, 7.5))
    ax = fig.add_subplot(111)
    ax.stackplot(
        x,
        excellent, satisfactory, failing,
        colors=(&quot;#c0e2c1&quot;, &quot;#fff8ba&quot;, &quot;#f4b8b8&quot;),
        labels=('Excellent', 'Satisfactory', 'Failing'),
    )
    ax.legend()
    # ax.set_title(&quot;History&quot;)    ax.set_xlabel(&quot;Builds&quot;)
    ax.set_ylabel(&quot;Amounts&quot;)
    ax.xaxis.set_minor_locator(MultipleLocator(1))
    ax.yaxis.set_major_locator(MultipleLocator(1))
    output = io.BytesIO()
    plt.savefig(output, bbox_inches='tight')
    output.seek(0)
    encoded = base64.b64encode(output.read())
    return f&quot;data:image/jpg;base64,{encoded.decode('utf8')}&quot;


if __name__ == &quot;__main__&quot;:
    x = [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102]
    excellent = [0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3]
    satisfactory = [0,0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2]
    failing = [0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,93]
    res = generate_chart(x, excellent, satisfactory, failing)
    print(res)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;效果展示&quot;&gt;效果展示&lt;/h1&gt;

&lt;p&gt;最终EMail 邮寄出来的内容如下：&lt;/p&gt;

&lt;p&gt;全部成功状态下：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/in-post/jenkins_build_success.png&quot; width=&quot;1200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;部分用例失败状态下：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shadow&quot; src=&quot;/img/in-post/jenkins_build_unstable.png&quot; width=&quot;1200&quot; /&gt;&lt;/p&gt;</content><author><name>Gavin</name></author><category term="jenkins" /><summary type="html">概述</summary></entry><entry><title type="html">Pg_deep_scrub</title><link href="http://172.17.73.80:4000/2023/03/01/PG_deep_scrub/" rel="alternate" type="text/html" title="Pg_deep_scrub" /><published>2023-03-01T00:00:00+08:00</published><updated>2023-03-01T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/03/01/PG_deep_scrub</id><content type="html" xml:base="http://172.17.73.80:4000/2023/03/01/PG_deep_scrub/">&lt;p&gt;http://www.chenlianfu.com/?p=3658&lt;/p&gt;</content><author><name></name></author><summary type="html">http://www.chenlianfu.com/?p=3658</summary></entry><entry><title type="html">S3 object encryption by awscli</title><link href="http://172.17.73.80:4000/2023/02/08/S3_object_encryption/" rel="alternate" type="text/html" title="S3 object encryption by awscli" /><published>2023-02-08T00:00:00+08:00</published><updated>2023-02-08T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/02/08/S3_object_encryption</id><content type="html" xml:base="http://172.17.73.80:4000/2023/02/08/S3_object_encryption/">&lt;h1 id=&quot;概述&quot;&gt;概述&lt;/h1&gt;

&lt;p&gt;本文介绍如何使用awscli 上传、下载S3 object 的加密object.&lt;/p&gt;

&lt;p&gt;写此文章的目的在于转换用户过程中，碰到了object加密上传下载，碍于本人对于awscli指令不熟悉，简易记录下来mark下。&lt;/p&gt;

&lt;h1 id=&quot;实战&quot;&gt;实战&lt;/h1&gt;

&lt;p&gt;前提条件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建了Bucket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本文以bucket01示例。&lt;/p&gt;

&lt;h2 id=&quot;对-bucket设置default-encryption&quot;&gt;对 bucket设置Default encryption&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;aws s3api put-bucket-encryption --bucket=bucket01 --server-side-encryption-configuration '{&quot;Rules&quot;: [{&quot;ApplyServerSideEncryptionByDefault&quot;: {&quot;SSEAlgorithm&quot;: &quot;AES256&quot;}}]}' --endpoint-url=http://localhost/ --debug
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;获取bucket的encryption信息&quot;&gt;获取bucket的encryption信息&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;aws s3api get-bucket-encryption --bucket=bucket05 --endpoint-url=https://localhost/
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;上传object&quot;&gt;上传object&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;aws s3api put-object --bucket bucket03 --key 2.txt --body /root/2.txt --server-side-encryption aws:kms --no-verify-ssl --endpoint-url=https://localhost/
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;下载object&quot;&gt;下载Object&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;aws s3api  get-object --endpoint-url=https://localhost --bucket=bucket01 --key 2.txt output2.txt --server-side-encryption AES256 --no-verify-ssl
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果endpoint-url中不想带上https,需要修改如下参数，并重启rgw&lt;/p&gt;

&lt;p&gt;ceph.config&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[radosgw]
rgw verify ssl = false
rgw crypt require ssl = false
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://ecloud.10086.cn/op-help-center/doc/article/57923&lt;/li&gt;
  &lt;li&gt;https://blog.csdn.net/QTM_Gitee/article/details/118052481&lt;/li&gt;
  &lt;li&gt;https://advancedweb.hu/encryption-options-for-s3-objects/&lt;/li&gt;
  &lt;li&gt;https://repost.aws/questions/QUVIw4-39zSPe_pxZ7m4Ejiw/using-aws-s-3-api-put-object-sse-customer-key-md-5-fails-with-cli&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Gavin</name></author><category term="ceph" /><summary type="html">概述</summary></entry><entry><title type="html">Python下使得function timeout</title><link href="http://172.17.73.80:4000/2023/02/06/function_timeout/" rel="alternate" type="text/html" title="Python下使得function timeout" /><published>2023-02-06T00:00:00+08:00</published><updated>2023-02-06T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/02/06/function_timeout</id><content type="html" xml:base="http://172.17.73.80:4000/2023/02/06/function_timeout/">&lt;h1 id=&quot;概述&quot;&gt;概述&lt;/h1&gt;

&lt;p&gt;今天在编写S3 multipart upload相关test case时，碰到一个Quota相关场景，即上传S3 Object超过了Bucket Quota 的设定，导致thread hang住，无法退出。
一般情况下，无Quota下，程序正常上传Object并退出，但碰到这种有Quota场景的，一旦超额，用例对应multipart upload function 卡住。
为此，本文介绍如果给function增加timeout，正常退出，且不影响后续程序的运行。&lt;/p&gt;

&lt;h1 id=&quot;实践&quot;&gt;实践&lt;/h1&gt;

&lt;p&gt;直接上解决方法.&lt;/p&gt;

&lt;p&gt;如下，为多线程中的使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*-
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;func_timeout&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func_set_timeout&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;func_timeout&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func_set_timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func_timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exceptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FunctionTimedOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'task func_timeout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Program output:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;hello world
task func_timeout
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样就可以不用中断主程序，可以继续执行后面的任务，也可以在超时后加上重试等功能，这就看自己需要了。&lt;/p&gt;

&lt;p&gt;对应的测试用例基类：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    if option in ['upload']:
        try:
            self.upload_file_multipart(file_path, object_name, bucket, thread_cnt)
        except func_timeout.exceptions.FunctionTimedOut:
            logging.debug(&quot;--  Upload failed by FunctionTimedOut&quot;)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;被call function 头部增加装饰器func_set_timeout&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;
    @func_set_timeout(5)
    def upload_file_multipart(self, file_path, object_name, bucket, thread_cnt):
        filesize = os.stat(file_path).st_size
        mp = bucket.initiate_multipart_upload(object_name)
        q = self.init_queue(filesize)
        for i in range(0, thread_cnt):
            t = threading.Thread(target=self.upload_chunk, args=(file_path, mp, q, i))
            t.setDaemon(True)
            t.start()
        q.join()
        mp.complete_upload()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如上，完美解决掉thread hang死问题。&lt;/p&gt;

&lt;p&gt;参考：&lt;/p&gt;

&lt;p&gt;https://zhuanlan.zhihu.com/p/39743129&lt;/p&gt;</content><author><name>Gavin</name></author><category term="python" /><summary type="html">概述</summary></entry><entry><title type="html">彻底删除Linux下md设备</title><link href="http://172.17.73.80:4000/2023/02/03/Delete_md_device/" rel="alternate" type="text/html" title="彻底删除Linux下md设备" /><published>2023-02-03T00:00:00+08:00</published><updated>2023-02-03T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/02/03/Delete_md_device</id><content type="html" xml:base="http://172.17.73.80:4000/2023/02/03/Delete_md_device/">&lt;h1 id=&quot;概述&quot;&gt;概述&lt;/h1&gt;

&lt;p&gt;Lab 2U4N设备上SSD盘有soft-raid存在，本文介绍如何清理掉这些md 设备。&lt;/p&gt;

&lt;h1 id=&quot;实践&quot;&gt;实践&lt;/h1&gt;

&lt;h2 id=&quot;获取相关信息&quot;&gt;获取相关信息&lt;/h2&gt;

&lt;p&gt;当前OS中md设备信息：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:~# lsblk
NAME        MAJ:MIN RM    SIZE RO TYPE  MOUNTPOINT
sda           8:0    0    3.5T  0 disk  
sdb           8:16   0    3.5T  0 disk  
sdc           8:32   0    3.5T  0 disk  
sdd           8:48   0    3.5T  0 disk  
sde           8:64   0    3.5T  0 disk  
sdf           8:80   0    3.5T  0 disk  
└─md126       9:126  0    3.5T  0 raid0 
  ├─md126p1 259:6    0      8G  0 part  
  ├─md126p2 259:7    0    3.5T  0 part  
  └─md126p3 259:8    0 1007.5K  0 part  
nvme0n1     259:0    0  238.5G  0 disk  
├─nvme0n1p1 259:2    0   1007K  0 part  
├─nvme0n1p2 259:3    0    512M  0 part  /boot/efi
├─nvme0n1p3 259:4    0      8G  0 part  [SWAP]
└─nvme0n1p4 259:5    0    230G  0 part  /
nvme1n1     259:1    0  238.5G  0 disk  
pmem0       259:9    0     16G  0 disk  
pmem1       259:10   0     16G  0 disk  
root@node123:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:~# mdadm -Ds 
ARRAY /dev/md/ddf0 metadata=ddf UUID=783f1a5c:5a361165:b27fff3b:c518b21a
ARRAY /dev/md126 container=/dev/md/ddf0 member=2 UUID=926ae63a:c3cd5a73:93063a44:eda9c39f
root@node123:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:~# mdadm -D /dev/md126
/dev/md126:
         Container : /dev/md/ddf0, member 2
        Raid Level : raid0
        Array Size : 3750199296 (3576.47 GiB 3840.20 GB)
      Raid Devices : 1
     Total Devices : 1

             State : clean 
    Active Devices : 1
   Working Devices : 1
    Failed Devices : 0
     Spare Devices : 0

        Chunk Size : 64K

Consistency Policy : none

    Container GUID : 4C534920:20202020:1000005D:10009361:50C1A436:0B5F09A0
                  (LSI      12/07/22 16:09:26)
               Seq : 00000259
     Virtual Disks : 5

    Number   Major   Minor   RaidDevice State
       0       8       80        0      active sync   /dev/sdf
root@node123:~#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:/etc/mdadm# cat /proc/mdstat 
Personalities : [raid0] [linear] [multipath] [raid1] [raid6] [raid5] [raid4] [raid10] 
md127 : inactive sdf[0](S)
      538968 blocks super external:ddf
       
unused devices: &amp;lt;none&amp;gt;
root@node123:/etc/mdadm# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:/etc/mdadm# mdadm -D /dev/md127
/dev/md127:
           Version : ddf
        Raid Level : container
     Total Devices : 1

   Working Devices : 1

    Container GUID : 4C534920:20202020:1000005D:10009361:50C1A436:0B5F09A0
                  (LSI      12/07/22 16:09:26)
               Seq : 00000259
     Virtual Disks : 5

     Member Arrays :

    Number   Major   Minor   RaidDevice

       -       8       80        -        /dev/sdf
root@node123:/etc/mdadm#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:~# cat /etc/mdadm/mdadm.conf
# mdadm.conf
#
# !NB! Run update-initramfs -u after updating this file.
# !NB! This will ensure that initramfs has an uptodate copy.
#
# Please refer to mdadm.conf(5) for information about this file.
#

# by default (built-in), scan all partitions (/proc/partitions) and all
# containers for MD superblocks. alternatively, specify devices to scan, using
# wildcards if desired.
#DEVICE partitions containers

# automatically tag new arrays as belonging to the local system
HOMEHOST &amp;lt;system&amp;gt;

# instruct the monitoring daemon where to send mail alerts
MAILADDR root

# definitions of existing MD arrays
ARRAY metadata=ddf UUID=f6da2fa6:f847cfe8:6efae15e:1ec1cb18
ARRAY container=f6da2fa6:f847cfe8:6efae15e:1ec1cb18 member=0 UUID=9ff807d6:cd51ad98:0fde88a0:bed80d0e
ARRAY container=f6da2fa6:f847cfe8:6efae15e:1ec1cb18 member=1 UUID=be17285a:62edb788:24f8e528:00912e8c
ARRAY container=f6da2fa6:f847cfe8:6efae15e:1ec1cb18 member=2 UUID=b08d0c30:d7aa7ba5:0a22787e:103831d9
ARRAY container=f6da2fa6:f847cfe8:6efae15e:1ec1cb18 member=3 UUID=5159a750:d1c2251f:56b0ef10:4b9a1309
ARRAY container=f6da2fa6:f847cfe8:6efae15e:1ec1cb18 member=4 UUID=70f4a9f0:fdb95f4d:753d57a5:8c2314c0
ARRAY metadata=ddf UUID=471d86af:9306e6d2:bc56f74d:c3b578f9
ARRAY container=471d86af:9306e6d2:bc56f74d:c3b578f9 member=0 UUID=6d0bf5f0:b39ef888:80529401:91f64dcb
ARRAY container=471d86af:9306e6d2:bc56f74d:c3b578f9 member=1 UUID=7cc9f621:c04ac67c:f4b0976a:78fe15f2
ARRAY container=471d86af:9306e6d2:bc56f74d:c3b578f9 member=2 UUID=95994645:864ddcc9:67c2f8ce:9fe93d97
ARRAY container=471d86af:9306e6d2:bc56f74d:c3b578f9 member=3 UUID=91b65356:8b4ec6e8:f64d7f23:63f8bd83
ARRAY container=471d86af:9306e6d2:bc56f74d:c3b578f9 member=4 UUID=c8f2b38c:f32ce54b:9d2ef6ff:4e537329
ARRAY metadata=ddf UUID=783f1a5c:5a361165:b27fff3b:c518b21a
ARRAY container=783f1a5c:5a361165:b27fff3b:c518b21a member=0 UUID=af20c622:b4cab24e:6e79902d:a83f750c
ARRAY container=783f1a5c:5a361165:b27fff3b:c518b21a member=1 UUID=2f4788c1:1dbe4d60:274c34fc:fdad0f1e
ARRAY container=783f1a5c:5a361165:b27fff3b:c518b21a member=2 UUID=926ae63a:c3cd5a73:93063a44:eda9c39f
ARRAY container=783f1a5c:5a361165:b27fff3b:c518b21a member=3 UUID=5bebdf83:dfd7c23d:99bdb41a:3991d212
ARRAY container=783f1a5c:5a361165:b27fff3b:c518b21a member=4 UUID=efc49f2c:f23319c6:b2b4666f:26f9dba6
ARRAY container=783f1a5c:5a361165:b27fff3b:c518b21a member=5 UUID=e05f0b90:235cb256:9d031efe:ac7f6f4f

# This configuration was auto-generated on Thu, 02 Feb 2023 12:52:09 +0800 by mkconf
root@node123:~#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;删除md-device&quot;&gt;删除md device&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:~# mdadm --stop -s /dev/md126
mdadm: stopped /dev/md126
root@node123:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:~# mdadm --misc --zero-superblock /dev/sdf
mdadm: Couldn't open /dev/sdf for write - not zeroing
root@node123:~# mdadm --zero-superblock /dev/sdf
mdadm: Couldn't open /dev/sdf for write - not zeroing
root@node123:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;说明
通过上面的方法，是无法删除md设备的，即使清空了/etc/mdadm/mdadm.conf也没用，重启机器后md设备又在了。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;正确的删除方法是：&lt;/p&gt;

&lt;h2 id=&quot;从procmdstat中获取当前os下的所有md信息&quot;&gt;从/proc/mdstat中获取当前OS下的所有md信息&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node122:/var/log/history# cat /proc/mdstat 
Personalities : [raid0] [linear] [multipath] [raid1] [raid6] [raid5] [raid4] [raid10] 
md120 : inactive sda[0]
      3750199296 blocks super external:/md124/3
       
md124 : inactive sda[1](S) sdb[0](S)
      1077936 blocks super external:ddf
       
md127 : inactive sdd[1](S) sdc[0](S)
      1077936 blocks super external:ddf
       
unused devices: &amp;lt;none&amp;gt;
root@node122:/var/log/history# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根据/proc/mdstat中的md信息，逐一stop并清理掉metadata信息，如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node123:/etc/mdadm# mdadm -S /dev/md127
mdadm: stopped /dev/md127
root@node123:/etc/mdadm# mdadm --zero-superblock /dev/sdf
root@node123:/etc/mdadm# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样，即使机器reboot后，也不会再次出现md设备了，干净清理掉。&lt;/p&gt;</content><author><name>Gavin</name></author><category term="Linux" /><category term="mdadm" /><summary type="html">概述</summary></entry><entry><title type="html">Linux stat家族之pidstat</title><link href="http://172.17.73.80:4000/2023/01/20/Linux_stat_family_of_pidstat/" rel="alternate" type="text/html" title="Linux stat家族之pidstat" /><published>2023-01-20T00:00:00+08:00</published><updated>2023-01-20T00:00:00+08:00</updated><id>http://172.17.73.80:4000/2023/01/20/Linux_stat_family_of_pidstat</id><content type="html" xml:base="http://172.17.73.80:4000/2023/01/20/Linux_stat_family_of_pidstat/">&lt;h1 id=&quot;pidstat-概述&quot;&gt;pidstat 概述&lt;/h1&gt;

&lt;p&gt;pidstat是sysstat工具的一个命令，用于监控全部或指定进程的cpu、内存、线程、设备IO等系统资源的占用情况。pidstat首次运行时显示自系统启动开始的各项统计信息，之后运行pidstat将显示自上次运行该命令以后的统计信息。用户可以通过指定统计的次数和时间来获得所需的统计信息。&lt;/p&gt;

&lt;h1 id=&quot;pidstat-安装&quot;&gt;pidstat 安装&lt;/h1&gt;

&lt;p&gt;pidstat 是sysstat软件套件的一部分，sysstat包含很多监控linux系统状态的工具，它能够从大多数linux发行版的软件源中获得。&lt;/p&gt;

&lt;p&gt;在Debian/Ubuntu系统中可以使用下面的命令来安装:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install sysstat&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CentOS/Fedora/RHEL版本的linux中则使用下面的命令：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yum install sysstat&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;实践&quot;&gt;实践&lt;/h1&gt;

&lt;h2 id=&quot;显示所有正在运行的进程或特定进程的统计信息&quot;&gt;显示所有正在运行的进程（或特定进程）的统计信息&lt;/h2&gt;

&lt;p&gt;使用 -p ALL 选项查看所有正在运行的进程的性能统计信息，如下所示:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -p ALL | wc -l
1275
root@node166:~# pidstat -p ALL | head
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:39:51 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:39:51 PM     0         1    0.02    0.05    0.00    0.08    18  systemd
04:39:51 PM     0         2    0.00    0.00    0.00    0.00    29  kthreadd
04:39:51 PM     0         4    0.00    0.00    0.00    0.00     0  kworker/0:0H
04:39:51 PM     0         7    0.00    0.00    0.00    0.00     0  mm_percpu_wq
04:39:51 PM     0         8    0.00    0.03    0.00    0.03     0  ksoftirqd/0
04:39:51 PM     0         9    0.00    0.87    0.00    0.87    30  rcu_sched
04:39:51 PM     0        10    0.00    0.00    0.00    0.00     0  rcu_bh
root@node166:~#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;默认情况下，这将显示 CPU 使用率。但是，可以将其更改为任何其他性能统计信息，如后面的示例所示。&lt;/p&gt;

&lt;p&gt;使用 -p PID 监视特定进程的性能统计信息，如下所示:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -p  5736
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:41:06 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:41:06 PM     0      5736    2.34    5.06    0.00    7.40    28  ceph-osd
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用--c-根据进程名称显示性能统计信息&quot;&gt;使用 -C 根据进程名称显示性能统计信息&lt;/h2&gt;

&lt;p&gt;以下示例将显示匹配特定关键字（例如：ceph-osd）的所有进程的性能统计信息:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -C &quot;ceph-osd&quot;
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:41:57 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:41:57 PM     0      5736    2.34    5.07    0.00    7.41    28  ceph-osd
04:41:57 PM     0      5741    1.95    3.42    0.00    5.37    15  ceph-osd
04:41:57 PM     0      5745    2.32    4.15    0.00    6.47    10  ceph-osd
04:41:57 PM     0      5749    2.10    3.88    0.00    5.98     0  ceph-osd
04:41:57 PM     0      5751    2.69    5.81    0.00    8.50    15  ceph-osd
04:41:57 PM     0      5753    2.13    4.20    0.00    6.33     8  ceph-osd
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意：
   在上面的例子中，选项 -C 代表“命令名称”。即它将使用给定的关键字搜索进程的命令名称。&lt;/p&gt;

&lt;h2 id=&quot;以一定的间隔重复输出&quot;&gt;以一定的间隔重复输出&lt;/h2&gt;

&lt;p&gt;默认情况下，不会重复输出。例如，选项 -u 是显示任务的 CPU 使用统计信息，这是 pidstat 命令给出的默认统计信息。Thsi 将只显示输出一次。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -p 5753
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:42:54 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:42:54 PM     0      5753    2.15    4.24    0.00    6.39     8  ceph-osd
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;要重复输出，请指定以秒为单位的间隔作为最后一个参数。例如，以下示例将每 1 秒重复输出一次（直到按 Ctrl-C）:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -p 5753 1
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:43:28 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:43:29 PM     0      5753    8.00   19.00    0.00   27.00     8  ceph-osd
04:43:30 PM     0      5753    7.00   22.00    0.00   29.00     8  ceph-osd
04:43:31 PM     0      5753    8.00   21.00    0.00   29.00     8  ceph-osd
04:43:32 PM     0      5753    8.00   26.00    0.00   34.00     8  ceph-osd
04:43:33 PM     0      5753   10.00   28.00    0.00   38.00     8  ceph-osd
04:43:34 PM     0      5753   10.00   22.00    0.00   32.00     8  ceph-osd
^C
Average:        0      5753    8.50   23.00    0.00   31.50     -  ceph-osd
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以下将每 15 秒重复输出一次（直到按 Ctrl-C）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;t@node166:~# pidstat -p 5753 15
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:44:10 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:44:25 PM     0      5753    8.00   21.07    0.00   29.07     8  ceph-osd
04:44:40 PM     0      5753    9.53   23.53    0.00   33.07     8  ceph-osd
04:44:55 PM     0      5753    7.87   21.13    0.00   29.00     8  ceph-osd
04:45:10 PM     0      5753    9.13   23.53    0.00   32.67     8  ceph-osd
^C
Average:        0      5753    8.63   22.32    0.00   30.95     -  ceph-osd
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用--d-显示特定进程的-io-统计信息&quot;&gt;使用 -d 显示特定进程的 I/O 统计信息&lt;/h2&gt;

&lt;p&gt;使用选项 -d 报告进程的 I/O 统计信息。它的输出显示了不同的属性，如 PID、磁盘读写速度（以 kB/s 为单位），如下所示。&lt;/p&gt;

&lt;p&gt;以下示例每 1 秒显示 PID 23493 的磁盘使用情况。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -p 5736 -d 1
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:44:51 PM   UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command
04:44:52 PM     0      5736  79916.00      0.00      0.00       0  ceph-osd
04:44:53 PM     0      5736  75820.00      0.00      0.00       0  ceph-osd
04:44:54 PM     0      5736  85052.00      4.00      0.00       0  ceph-osd
04:44:55 PM     0      5736  87100.00      0.00      0.00       0  ceph-osd
04:44:56 PM     0      5736  92204.00      0.00      0.00       0  ceph-osd
04:44:57 PM     0      5736  86064.00      0.00      0.00       0  ceph-osd
^C
Average:        0      5736  84359.33      0.67      0.00       0  ceph-osd
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用--r-显示特定进程的分页活动&quot;&gt;使用 -r 显示特定进程的分页活动&lt;/h2&gt;

&lt;p&gt;使用选项 -r 显示给定任务 (PID) 的页面错误和内存利用率。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -p 5753 -r 1
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)


04:45:52 PM   UID       PID  minflt/s  majflt/s     VSZ     RSS   %MEM  Command
04:45:53 PM     0      5753  36733.00      0.00 7048224 4374012   3.35  ceph-osd
04:45:54 PM     0      5753  39449.00      0.00 7048224 4374012   3.35  ceph-osd
04:45:55 PM     0      5753  48854.00      0.00 7048224 4374044   3.35  ceph-osd
04:45:56 PM     0      5753  37720.00      0.00 7048224 4374060   3.35  ceph-osd
04:45:57 PM     0      5753  46121.00      0.00 7048224 4374060   3.35  ceph-osd
04:45:58 PM     0      5753  46210.00      0.00 7048224 4392352   3.36  ceph-osd
^C
Average:        0      5753  42514.50      0.00 7048224 4377090   3.35  ceph-osd
root@node166:~#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用选项--l-显示命令名称及其参数&quot;&gt;使用选项 -l 显示命令名称及其参数&lt;/h2&gt;

&lt;p&gt;默认情况下，pidstat 仅显示命令名称。即没有命令的完整路径及其参数。例如，在命令列中，你只会看到 “python” （它只是程序的名称）。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -C python
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:46:37 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:46:37 PM     0     11307    0.05    0.03    0.00    0.07    29  python
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是，当使用选项 -l 时，它将显示命令的完整路径及其所有参数，如下所示:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -C python -l
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:47:17 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:47:17 PM     0     11307    0.05    0.03    0.00    0.07     1  python /usr/local/bin/ezs3-app start 
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为了定期获取任务的统计信息，只需传递你希望查看统计信息的秒数:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -C ceph-osd -l 1
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:48:20 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:48:21 PM     0      5736    5.77   12.50    0.00   18.27    28  /usr/bin/ceph-osd -f --cluster ceph --id 16 --setuser root --setgroup root 
04:48:21 PM     0      5741    8.65   17.31    0.00   25.96    15  /usr/bin/ceph-osd -f --cluster ceph --id 14 --setuser root --setgroup root 
04:48:21 PM     0      5745    8.65   21.15    0.00   29.81    10  /usr/bin/ceph-osd -f --cluster ceph --id 12 --setuser root --setgroup root 
04:48:21 PM     0      5749    8.65   21.15    0.00   29.81     0  /usr/bin/ceph-osd -f --cluster ceph --id 13 --setuser root --setgroup root 
04:48:21 PM     0      5751    6.73   16.35    0.00   23.08    15  /usr/bin/ceph-osd -f --cluster ceph --id 15 --setuser root --setgroup root 
04:48:21 PM     0      5753   11.54   31.73    0.00   43.27     8  /usr/bin/ceph-osd -f --cluster ceph --id 17 --setuser root --setgroup root 

04:48:21 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:48:22 PM     0      5736    4.00    8.00    0.00   12.00    28  /usr/bin/ceph-osd -f --cluster ceph --id 16 --setuser root --setgroup root 
04:48:22 PM     0      5741    7.00   21.00    0.00   28.00    15  /usr/bin/ceph-osd -f --cluster ceph --id 14 --setuser root --setgroup root 
04:48:22 PM     0      5745    7.00   21.00    0.00   28.00    10  /usr/bin/ceph-osd -f --cluster ceph --id 12 --setuser root --setgroup root 
04:48:22 PM     0      5749   10.00   25.00    0.00   35.00     0  /usr/bin/ceph-osd -f --cluster ceph --id 13 --setuser root --setgroup root 
04:48:22 PM     0      5751    8.00   18.00    0.00   26.00    15  /usr/bin/ceph-osd -f --cluster ceph --id 15 --setuser root --setgroup root 
04:48:22 PM     0      5753    8.00   27.00    0.00   35.00     8  /usr/bin/ceph-osd -f --cluster ceph --id 17 --setuser root --setgroup root 

04:48:22 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:48:23 PM     0      5736    5.00   14.00    0.00   19.00    28  /usr/bin/ceph-osd -f --cluster ceph --id 16 --setuser root --setgroup root 
04:48:23 PM     0      5741    8.00   21.00    0.00   29.00    15  /usr/bin/ceph-osd -f --cluster ceph --id 14 --setuser root --setgroup root 
04:48:23 PM     0      5745    7.00   22.00    0.00   29.00    10  /usr/bin/ceph-osd -f --cluster ceph --id 12 --setuser root --setgroup root 
04:48:23 PM     0      5749    9.00   25.00    0.00   34.00     0  /usr/bin/ceph-osd -f --cluster ceph --id 13 --setuser root --setgroup root 
04:48:23 PM     0      5751    9.00   18.00    0.00   27.00    15  /usr/bin/ceph-osd -f --cluster ceph --id 15 --setuser root --setgroup root 
04:48:23 PM     0      5753    9.00   30.00    0.00   39.00     8  /usr/bin/ceph-osd -f --cluster ceph --id 17 --setuser root --setgroup root 
^C

Average:      UID       PID    %usr %system  %guest    %CPU   CPU  Command
Average:        0      5736    4.93   11.51    0.00   16.45     -  /usr/bin/ceph-osd -f --cluster ceph --id 16 --setuser root --setgroup root 
Average:        0      5741    7.89   19.74    0.00   27.63     -  /usr/bin/ceph-osd -f --cluster ceph --id 14 --setuser root --setgroup root 
Average:        0      5745    7.57   21.38    0.00   28.95     -  /usr/bin/ceph-osd -f --cluster ceph --id 12 --setuser root --setgroup root 
Average:        0      5749    9.21   23.68    0.00   32.89     -  /usr/bin/ceph-osd -f --cluster ceph --id 13 --setuser root --setgroup root 
Average:        0      5751    7.89   17.43    0.00   25.33     -  /usr/bin/ceph-osd -f --cluster ceph --id 15 --setuser root --setgroup root 
Average:        0      5753    9.54   29.61    0.00   39.14     -  /usr/bin/ceph-osd -f --cluster ceph --id 17 --setuser root --setgroup root 
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;定期显示输出-x-次&quot;&gt;定期显示输出 X 次&lt;/h2&gt;

&lt;p&gt;也可以在给定的时间间隔内获取特定次数的报告，以获取如下所示的过程列表。&lt;/p&gt;

&lt;p&gt;添加次数作为最后一个参数（在以秒为单位的间隔之后）。&lt;/p&gt;

&lt;p&gt;例如，下面将显示输出 5 次（以 2 秒的固定间隔）。在报告结束时，它还将显示“平均值”值。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat 2 5
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:50:06 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:50:08 PM     0         9    0.00    1.46    0.00    1.46    23  rcu_sched
04:50:08 PM     0       258    0.00    0.49    0.00    0.49    23  kcompactd0
04:50:08 PM     0       259    0.00    0.49    0.00    0.49    15  kcompactd1
04:50:08 PM     0       292    0.00    6.34    0.00    6.34    22  kswapd0
04:50:08 PM     0       305    0.00    5.37    0.00    5.37    37  kswapd1
04:50:08 PM     0       720    0.00    0.49    0.00    0.49     0  jbd2/sdg2-8
04:50:08 PM   114      2695    0.49    0.00    0.00    0.49    38  memcached
04:50:08 PM     0      2730    6.83    3.41    0.00   10.24     2  ceph-mon
04:50:08 PM     0      2922    0.49    0.49    0.00    0.98    16  ezrpcd
04:50:08 PM     0      3103    0.49    0.00    0.00    0.49     8  bt-monitord
04:50:08 PM     0      5736    4.39   13.66    0.00   18.05    28  ceph-osd
04:50:08 PM     0      5741    6.83   20.00    0.00   26.83    15  ceph-osd
04:50:08 PM     0      5745    8.78   22.44    0.00   31.22    10  ceph-osd
04:50:08 PM     0      5749    8.78   26.34    0.00   35.12     0  ceph-osd
04:50:08 PM     0      5751    9.27   18.05    0.00   27.32    15  ceph-osd
04:50:08 PM     0      5753    9.76   29.76    0.00   39.51     8  ceph-osd
04:50:08 PM     0      6076    8.78    8.78    0.00   17.56     3  node_exporter
04:50:08 PM     0      7890    2.44    0.00    0.00    2.44    19  prometheus
04:50:08 PM     0     30461    0.49    0.00    0.00    0.49    30  bt-ipmi-agent.p
04:50:08 PM     0     33930    3.41    0.98    0.00    4.39    38  bt-exporter
04:50:08 PM     0     35428   13.17    0.98    0.00   14.15    13  bt-ceph-exporte
04:50:08 PM    33     66962    5.37    1.46    0.00    6.83    12  apache2
04:50:08 PM     0    115886    0.49    0.00    0.00    0.49     6  sshd
04:50:08 PM     0    121221    0.00    0.49    0.00    0.49    32  ctdbd
04:50:08 PM     0    121679    3.41    0.49    0.00    3.90     6  eziscsi-rbd-cle
04:50:08 PM     0    121790   18.05    3.90    0.00   21.95     1  btnas-agent
04:50:08 PM     0    121955    2.44    0.98    0.00    3.41    36  eziscsid.py
04:50:08 PM     0    122237    0.49    0.49    0.00    0.98    38  ezqosd
04:50:08 PM     0    147875    0.98    1.46    0.00    2.44    35  pidstat
04:50:08 PM     0    597911    0.49    0.00    0.00    0.49    11  ssh
04:50:08 PM     0    654077    0.49    0.98    0.00    1.46    36  ezs3-agent.py
04:50:08 PM     0    654597    0.49    0.00    0.00    0.49    28  bt-haproxy-agen

04:50:08 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:50:10 PM     0         9    0.00    1.00    0.00    1.00    19  rcu_sched
04:50:10 PM     0       292    0.00    7.50    0.00    7.50    23  kswapd0
04:50:10 PM     0       305    0.00    5.00    0.00    5.00    13  kswapd1
04:50:10 PM   109      2145    0.50    0.00    0.00    0.50     6  dbus-daemon
04:50:10 PM   114      2695    0.00    0.50    0.00    0.50    39  memcached
04:50:10 PM     0      2730    2.50    0.50    0.00    3.00     2  ceph-mon
04:50:10 PM     0      2783    0.50    0.00    0.00    0.50    12  ceph-mgr
04:50:10 PM     0      3103    0.50    0.50    0.00    1.00     9  bt-monitord
04:50:10 PM     0      5736    5.50   13.00    0.00   18.50    28  ceph-osd
04:50:10 PM     0      5741    7.50   20.00    0.00   27.50    15  ceph-osd
04:50:10 PM     0      5745    8.00   23.50    0.00   31.50    10  ceph-osd
04:50:10 PM     0      5749    9.00   24.50    0.00   33.50     0  ceph-osd
04:50:10 PM     0    125343    0.50    0.00    0.00    0.50     0  ganesha.nfsd
04:50:10 PM     0    147875    1.00    1.50    0.00    2.50    35  pidstat
04:50:10 PM     0    564344    0.50    0.50    0.00    1.00    33  radosgw

04:50:10 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
04:50:12 PM     0         9    0.00    1.50    0.00    1.50    23  rcu_sched
04:50:16 PM     0    654597    0.50    0.00    0.00    0.50    29  bt-haproxy-agen
==============================   中间省略 ============================

Average:      UID       PID    %usr %system  %guest    %CPU   CPU  Command
Average:        0         9    0.00    1.19    0.00    1.19     -  rcu_sched
Average:        0       258    0.00    0.10    0.00    0.10     -  kcompactd0
Average:        0       259    0.00    0.20    0.00    0.20     -  kcompactd1
Average:        0       292    0.00    6.27    0.00    6.27     -  kswapd0
Average:        0       305    0.00    5.27    0.00    5.27     -  kswapd1
Average:        0       718    0.00    0.10    0.00    0.10     -  kworker/0:1H
Average:        0       720    0.00    0.10    0.00    0.10     -  jbd2/sdg2-8
Average:      109      2145    0.20    0.00    0.00    0.20     -  dbus-daemon
Average:      110      2163    0.10    0.10    0.00    0.20     -  avahi-daemon
Average:      114      2695    0.10    0.10    0.00    0.20     -  memcached
Average:        0      2730    4.68    1.89    0.00    6.57     -  ceph-mon
Average:        0      2783    0.10    0.00    0.00    0.10     -  ceph-mgr
Average:        0      2922    0.20    0.10    0.00    0.30     -  ezrpcd
Average:        0      3103    0.50    0.20    0.00    0.70     -  bt-monitord
Average:        0      5224    0.10    0.00    0.00    0.10     -  sshd
Average:        0      5736    5.77   14.53    0.00   20.30     -  ceph-osd
Average:        0      5741    7.46   19.60    0.00   27.06     -  ceph-osd
Average:        0      5745    8.56   22.39    0.00   30.95     -  ceph-osd
Average:        0      5749    9.15   25.17    0.00   34.33     -  ceph-osd
Average:        0      5751    8.76   18.71    0.00   27.46     -  ceph-osd
Average:        0      5753   10.35   28.96    0.00   39.30     -  ceph-osd
Average:        0      6076   10.45    8.36    0.00   18.81     -  node_exporter
Average:        0      7890    2.99    0.10    0.00    3.08     -  prometheus
Average:        0     11307    0.00    0.10    0.00    0.10     -  python
Average:        0     29221    0.10    0.00    0.00    0.10     -  bt-disk-monitor
Average:        0     29625    0.00    0.10    0.00    0.10     -  bt-recovery-qos
Average:        0     30461    0.30    0.00    0.00    0.30     -  bt-ipmi-agent.p
Average:        0     33930    5.17    3.28    0.00    8.46     -  bt-exporter
Average:        0     35428    2.99    0.20    0.00    3.18     -  bt-ceph-exporte
Average:       33     66962    2.69    0.40    0.00    3.08     -  apache2
Average:        0     67124    0.00    0.10    0.00    0.10     -  kworker/14:3
Average:        0     94898    0.00    0.10    0.00    0.10     -  kworker/u80:2
Average:        0    115823    0.00    0.10    0.00    0.10     -  ssh
Average:        0    115886    0.10    0.00    0.00    0.10     -  sshd
Average:        0    121221    0.00    0.20    0.00    0.20     -  ctdbd
Average:        0    121679    0.70    0.10    0.00    0.80     -  eziscsi-rbd-cle
Average:        0    121682    0.10    0.10    0.00    0.20     -  ezfs-recycle-fl
Average:        0    121790    7.56    1.79    0.00    9.35     -  btnas-agent
Average:        0    121955    2.79    0.80    0.00    3.58     -  eziscsid.py
Average:        0    122237    0.30    0.20    0.00    0.50     -  ezqosd
Average:        0    122253    0.50    0.00    0.00    0.50     -  bt-rbd-qos-agen
Average:        0    122916    0.10    0.00    0.00    0.10     -  sshd
Average:        0    123274    0.00    0.10    0.00    0.10     -  kworker/6:2
Average:        0    125343    0.10    0.10    0.00    0.20     -  ganesha.nfsd
Average:        0    147875    0.80    1.49    0.00    2.29     -  pidstat
Average:        0    471784    0.00    0.10    0.00    0.10     -  kworker/26:0
Average:        0    564344    0.10    0.10    0.00    0.20     -  radosgw
Average:        0    597911    0.10    0.00    0.00    0.10     -  ssh
Average:        0    654077    0.30    0.30    0.00    0.60     -  ezs3-agent.py
Average:        0    654597    0.20    0.00    0.00    0.20     -  bt-haproxy-agen
Average:        0    655087    0.10    0.00    0.00    0.10     -  ssh
root@node166:~#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用--t-显示选定进程及其子进程的统计信息&quot;&gt;使用 -T 显示选定进程及其子进程的统计信息&lt;/h2&gt;

&lt;p&gt;使用选项 -T 指定 CHILD 或 TASKS。在这种情况下，将报告 TASKS 或任务及其所有子项的统计数据。你也可以指定 ALL。&lt;/p&gt;

&lt;p&gt;-T 的可能值：CHILD、TASKS 或 ALL。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -T CHILD | head 
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:51:31 PM   UID       PID    usr-ms system-ms  guest-ms  Command
04:51:31 PM     0         1    538800    414470         0  systemd
04:51:31 PM     0         2         0       580         0  kthreadd
04:51:31 PM     0         8        10      8020         0  ksoftirqd/0
04:51:31 PM     0         9         0    224970         0  rcu_sched
04:51:31 PM     0        11         0       240         0  migration/0
04:51:31 PM     0        12         0        50         0  watchdog/0
04:51:31 PM     0        15        50         0         0  watchdog/1
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用--t-以树格式显示依赖进程的统计信息&quot;&gt;使用 -t 以树格式显示依赖进程的统计信息&lt;/h2&gt;

&lt;p&gt;使用选项 -t，你可以以树格式显示输出，如下所示。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -t -C &quot;ceph-osd&quot;
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

04:52:06 PM   UID      TGID       TID    %usr %system  %guest    %CPU   CPU  Command
04:52:06 PM     0      5736         -    2.42    5.29    0.00    7.71    28  ceph-osd
04:52:06 PM     0         -      5736    0.01    0.00    0.00    0.01    28  |__ceph-osd
04:52:06 PM     0         -      5815    0.00    0.00    0.00    0.00     0  |__ceph-osd
04:52:06 PM     0      5741         -    2.07    3.75    0.00    5.82    15  ceph-osd
04:52:06 PM     0         -      5741    0.01    0.00    0.00    0.01    15  |__ceph-osd
04:52:06 PM     0         -      6056    0.00    0.00    0.00    0.00    23  |__ceph-osd
04:52:06 PM     0      5745         -    2.43    4.48    0.00    6.92    10  ceph-osd
04:52:06 PM     0         -      5745    0.01    0.00    0.00    0.01    10  |__ceph-osd
04:52:06 PM     0         -      6006    0.00    0.00    0.00    0.00    36  |__ceph-osd
04:52:06 PM     0      5749         -    2.23    4.26    0.00    6.49     0  ceph-osd
04:52:06 PM     0         -      5749    0.01    0.00    0.00    0.01     0  |__ceph-osd
04:52:06 PM     0         -      6078    0.00    0.00    0.00    0.00    13  |__ceph-osd
04:52:06 PM     0      5751         -    2.80    6.07    0.00    8.87    15  ceph-osd
04:52:06 PM     0         -      5751    0.01    0.00    0.00    0.01    15  |__ceph-osd
04:52:06 PM     0         -      6005    0.00    0.00    0.00    0.00    16  |__ceph-osd
04:52:06 PM     0      5753         -    2.30    4.67    0.00    6.97     8  ceph-osd
04:52:06 PM     0         -      5753    0.01    0.00    0.00    0.01     8  |__ceph-osd
04:52:06 PM     0         -      5861    0.00    0.00    0.00    0.00    27  |__ceph-osd
root@node166:~# 

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用--h-在一行上水平显示所有统计信息&quot;&gt;使用 -h 在一行上水平显示所有统计信息&lt;/h2&gt;

&lt;p&gt;如果要求 pidstat 报告多个统计数据，它会显示一个又一个统计数据。在下面的示例中，它将首先显示选项“r”的性能统计信息，然后是选项“u”，最后是选项“d”。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;pidstat -rud
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是，如果希望单个进程的所有这些统计信息都显示在一行中，请使用选项 -h，如下所示:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@node166:~# pidstat -rud -h | head
Linux 4.14.148-202302151035.git6a5dacc (node166) 	04/17/2023 	_x86_64_	(40 CPU)

#      Time   UID       PID    %usr %system  %guest    %CPU   CPU  minflt/s  majflt/s     VSZ     RSS   %MEM   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command
 1681721616     0         1    0.02    0.05    0.00    0.07    21      3.08      0.00  191392   11888   0.01     22.63      5.89      2.57       8  systemd
 1681721616     0         2    0.00    0.00    0.00    0.00    28      0.00      0.00       0       0   0.00      0.00      0.00      0.00       0  kthreadd
 1681721616     0         8    0.00    0.03    0.00    0.03     0      0.00      0.00       0       0   0.00      0.00      0.00      0.00       0  ksoftirqd/0
 1681721616     0         9    0.00    0.88    0.00    0.88     8      0.00      0.00       0       0   0.00      0.00      0.00      0.00       0  rcu_sched
 1681721616     0        11    0.00    0.00    0.00    0.00     0      0.00      0.00       0       0   0.00      0.00      0.00      0.00       0  migration/0
 1681721616     0        12    0.00    0.00    0.00    0.00     0      0.00      0.00       0       0   0.00      0.00      0.00      0.00       0  watchdog/0
 1681721616     0        15    0.00    0.00    0.00    0.00     1      0.00      0.00       0       0   0.00      0.00      0.00      0.00       0  watchdog/1
root@node166:~# 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gavin</name></author><category term="Linux" /><summary type="html">pidstat 概述</summary></entry></feed>